{UTF-8}

DimA: A1, A2, A3
  ~~|

DimB: B1, B2, B3
  ~~|

DimC: C1, C2
  ~~|

DimD: D1, D2 -> DimC
  ~~|

DimE: E1, E2
  ~~|

Simple 1
  ~~|

Simple 2
  ~~|

A Values[DimA]
  ~~|

BC Values[DimB,DimC]
  ~~|

D Values[DimD]
  ~~|

E Values[E1]
  ~~|

E Values[E2]
  ~~|

Look1((0,0),(1,1),(2,2))
	~~|

Look2((0,0),(1,1),(2,2))
	~~|

Input 1 = 10.0
  ~~|

Input 2 = 20.0
  ~~|

Input 3 = 30.0
  ~~|

Simple Totals =
  Simple 1 + Simple 2
  ~~|

A Totals =
  SUM( A Values[DimA!] )
  ~~|

B1 Totals =
  SUM( BC Values[B1,DimC!] )
  ~~|

D Totals =
  SUM( D Values[DimD!] )
  ~~|

E1 Values =
  E Values[E1]
  ~~|

E2 Values =
  E Values[E2]
  ~~|

Input 1 and 2 Total =
  Input 1 + Input 2
  ~~|

Input 2 and 3 Total =
  Input 2 + Input 3
  ~~|

Look1 Value at t1 =
  Look1(1)
  ~~|

Look2 Value at t1 =
  Look2(1)
  ~~|

With Look1 at t1 = WITH LOOKUP ( 1, ([(0,0)-(2,2)],(0,0),(1,1),(2,2)) )
	~~|

With Look2 at t1 = WITH LOOKUP ( 1, ([(0,0)-(2,2)],(0,0),(1,1),(2,2)) )
	~~|

Constant Partial 1 = 1
	~~|

Constant Partial 2 = 2
	~~|

Initial Partial[C1] =
  INITIAL( Constant Partial 1 )
	~~|

Initial Partial[C2] =
  INITIAL( Constant Partial 2 )
	~~|

Partial[C2] =
  Initial Partial[C2]
	~~|

Test 1 T = 1
	~~|
Test 1 F = 1
	~~|
Test 1 Result = IF THEN ELSE(Input 1 = 10.0, Test 1 T, Test 1 F)
	~
  ~ Should not be eliminated because "Input 1" is listed as an input in the spec file.
  |

Test 2 T = 1
	~~|
Test 2 F = 1
	~~|
Test 2 Result = IF THEN ELSE(0, Test 2 T, Test 2 F)
	~
  ~ Only "Test 2 F" should be generated.
  |

Test 3 T = 1
	~~|
Test 3 F = 1
	~~|
Test 3 Result = IF THEN ELSE(1, Test 3 T, Test 3 F)
	~
  ~ Only "Test 3 T" should be generated.
  |

Test 4 Cond = 0
	~~|
Test 4 T = 1
	~~|
Test 4 F = 1
	~~|
Test 4 Result = IF THEN ELSE(Test 4 Cond, Test 4 T, Test 4 F)
	~
  ~ Only "Test 4 F" should be generated.
  |

Test 5 Cond = 1
	~~|
Test 5 T = 1
	~~|
Test 5 F = 1
	~~|
Test 5 Result = IF THEN ELSE(Test 5 Cond, Test 5 T, Test 5 F)
	~
  ~ Only "Test 5 T" should be generated.
  |

Test 6 Cond = 0
	~~|
Test 6 T = 1
	~~|
Test 6 F = 1
	~~|
Test 6 Result = IF THEN ELSE(Test 6 Cond = 1, Test 6 T, Test 6 F)
	~
  ~ Only "Test 6 F" should be generated.
  |

Test 7 Cond = 1
	~~|
Test 7 T = 1
	~~|
Test 7 F = 1
	~~|
Test 7 Result = IF THEN ELSE(Test 7 Cond = 1, Test 7 T, Test 7 F)
	~
  ~ Only "Test 7 T" should be generated.
  |

Test 8 Cond = 0
	~~|
Test 8 T = 1
	~~|
Test 8 F = 1
	~~|
Test 8 Result = IF THEN ELSE(Test 8 Cond > 0, Test 8 T, Test 8 F)
	~
  ~ Only "Test 8 F" should be generated.
  |

Test 9 Cond = 1
	~~|
Test 9 T = 1
	~~|
Test 9 F = 1
	~~|
Test 9 Result = IF THEN ELSE(Test 9 Cond > 0, Test 9 T, Test 9 F)
	~
  ~ Only "Test 9 T" should be generated.
  |

Test 10 Cond = 1
	~~|
Test 10 T = 1
	~~|
Test 10 F = 1
	~~|
Test 10 Result = IF THEN ELSE(ABS(Test 10 Cond), Test 10 T, Test 10 F)
	~
  ~ Should not be eliminated because condition contains function call.
  |

Test 11 Cond = 0
	~~|
Test 11 T = 1
	~~|
Test 11 F = 1
	~~|
Test 11 Result = IF THEN ELSE(Test 11 Cond :AND: ABS(Test 11 Cond), Test 11 T, Test 11 F)
	~
  ~ Only "Test 11 F" should be generated.
  |

Test 12 Cond = 1
	~~|
Test 12 T = 1
	~~|
Test 12 F = 1
	~~|
Test 12 Result = IF THEN ELSE(Test 12 Cond :OR: ABS(Test 12 Cond), Test 12 T, Test 12 F)
	~
  ~ Only "Test 12 T" should be generated.
  |

********************************************************
	.Control
********************************************************~
		Simulation Control Parameters
	|

FINAL TIME  = 10
	~	Month
	~	The final time for the simulation.
	|

INITIAL TIME  = 0
	~	Month
	~	The initial time for the simulation.
	|

SAVEPER  =
        TIME STEP
	~	Month [0,?]
	~	The frequency with which output is stored.
	|

TIME STEP  = 1
	~	Month [0,?]
	~	The time step for the simulation.
	|
